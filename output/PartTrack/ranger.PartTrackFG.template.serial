#!/bin/bash


# Specify the queue explicitly
#$ -q vis

# Specify V 
#$ -V 

# Specify to run from current working directory 
#$ -cwd 

# Specify number of cpus in a machine-specific way
#$ -pe 1way 16

# Specify the wall clock time
#$ -l h_rt=01:00:00

# Merge stderr to stdout (optional, otherwise they're in separate files)
#$ -j y

# Name the job (this will appear in the output from the qstat command)
#$ -N FigureGen42

# Specify the output filename explicitly (optional; the default is named
# from the job ID, in the directory where qsub was run.)
#$ -o %advisdir%/%enstorm%/%enstorm%PartTrack.out

# Request mail when job ends, or is aborted (optional, default is "a" only)
# (commented out)
# $ -m ea

# Specify email address
# $ -M %notifyuser%


# some commands
set echo
umask 007
umask 


# Clean out all modules
module purge
# Reset to TACC baseline
module load TACC
# Unload default compiler and mpi stack
module unload pgi mvapich2
# Load which ever combination you need
module load pgi
#module load mvapich/1.0.1
module load ddt
module load intel/11.1

# The directory to start in 
cd %advisdir%/%enstorm%/PartTrack

# These are the actual commands to be executed.

    DATETIME=`date +'%Y-%h-%d-T%H:%M:%S'`
    echo "[${DATETIME}] : Job starting"          >> run.fig.start
    echo "[${DATETIME}] : %advisdir%  %enstorm%" >> run.fig.start
    echo "[${DATETIME}] : FigGen42 PartTrack"    >> run.fig.start

     ./FigureGen42_serial.exe  >  FigGen_PartTrack.out

    ERROVALUE=$?
    DATETIME=`date +'%Y-%h-%d-T%H:%M:%S'`
    if [ $ERROVALUE == 0 ] ; then
    echo "[${DATETIME}] : Job finished with return value = $ERROVALUE" >> run.fig.finish
    echo "[${DATETIME}] :  %advisdir%  %enstorm%"               >> run.fig.finish
    echo "[${DATETIME}] :  FigGen42 PartTrack"                  >> run.fig.finish
    else
    echo "[${DATETIME}] : Job finished with return value = $ERROVALUE" >> run.fig.error
    echo "[${DATETIME}] :  %advisdir%  %enstorm%"               >> run.fig.error
    echo "[${DATETIME}] :  FigGen42 PartTrack"                  >> run.fig.error
    fi

# You don't need anything special at the end of the script.
